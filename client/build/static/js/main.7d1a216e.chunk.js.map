{"version":3,"sources":["components/AppointmentList.js","components/NavBar.js","components/AppointmentCreate.js","components/AppointmentEdit.js","components/Login.js","components/Register.js","components/DocRegister.js","components/Diagnosis.js","components/DateScheduled.js","App.js","reportWebVitals.js","index.js"],"names":["AppointmentList","useContext","UserContext","user","useState","appointments","setAppointments","docRegister","setDocRegister","add","setAdd","edit","setEdit","appointmentId","setAppointmentId","diagnosis","setDiagnosis","dateScheduled","setDateScheduled","diagnosisId","setDiagnosisId","DateScheduledId","setDateScheduledId","deleteAppointment","id","console","log","axios","delete","then","res","data","filter","appointment","_id","handleRole","role","handleEdit","handleDateScheduled","useEffect","post","headers","Authorization","accesstoken","dateCreated","substring","catch","err","to","className","Button","onClick","Table","striped","bordered","hover","size","map","currentAppointments","doctor","symptoms","description","variant","NavBar","logout","Navbar","bg","Image","src","rounded","Nav","AppointmentCreate","doctorList","setDoctorList","setDoctor","setSymptoms","setDescription","message","setMessage","onChange","e","value","target","name","onSubmit","preventDefault","handleDoctor","get","doctors","surname","Alert","Card","type","required","AppointmentEdit","props","setEdited","match","params","doc","selected","Login","setUser","email","setEmail","password","setPassword","hanldeChange","login","InputGroup","FormControl","placeholder","Register","setName","setSurename","register","DocRegister","setsurname","Diagnosis","insertDiagnosis","DateScheduled","date","setDate","hour","setHour","handleSelect","handleInput","dateFormat","timeElapsed","Date","now","dateFormated","toISOString","min","React","createContext","App","Provider","window","location","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d1a216e.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { UserContext } from \"../App\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\n// compoennt to handle the list of cars on the font-end\r\nexport default function AppointmentList() {\r\n  const [user] = useContext(UserContext);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [docRegister, setDocRegister] = useState(false);\r\n  const [add, setAdd] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n  const [appointmentId, setAppointmentId] = useState(false);\r\n  const [diagnosis, setDiagnosis] = useState(false);\r\n  const [dateScheduled, setDateScheduled] = useState(false);\r\n  const [diagnosisId, setDiagnosisId] = useState(\"\");\r\n  const [DateScheduledId, setDateScheduledId] = useState(\"\");\r\n\r\n  // fetch the data when component mounts and chooses the correct role to do a fetch call.\r\n  useEffect(() => {\r\n    if (user.role === \"patient\") {\r\n      axios\r\n        .post(\r\n          \"http://localhost:8080/api/patient/appointments\",\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user.accesstoken}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data[0].dateCreated.substring(0, 10));\r\n          setAppointments(res.data);\r\n          console.log(appointments);\r\n        })\r\n        .catch((err) => console.log(err));\r\n      console.log(\"logged in as patient\");\r\n    } else if (user.role === \"doctor\") {\r\n      console.log(user);\r\n      axios\r\n        .post(\r\n          \"http://localhost:8080/api/doctor/appointments\",\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user.accesstoken}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res.data[0].date.substring(0, 4) - 5);\r\n          setAppointments(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else if (user.role === \"admin\") {\r\n      axios\r\n        .post(\r\n          \"http://localhost:8080/api/admin/appointments\",\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user.accesstoken}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res.data[0].date.substring(0, 4) - 5);\r\n          setAppointments(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n      console.log(\"logged in as admin\");\r\n    }\r\n  }, []);\r\n\r\n  // handles the deleted cars\r\n  function deleteAppointment(id) {\r\n    console.log(id);\r\n    axios\r\n      .delete(\"http://localhost:8080/api/delete/\" + id)\r\n      .then((res) => console.log(res.data));\r\n\r\n    setAppointments(\r\n      appointments.filter((appointment) => appointment._id !== id)\r\n    );\r\n  }\r\n\r\n  function handleRole() {\r\n    if (user.role === \"admin\") {\r\n      setAdd(false);\r\n      setDocRegister(true);\r\n    } else if (user.role === \"patient\") {\r\n      setDocRegister(false);\r\n      setAdd(true);\r\n    }\r\n  }\r\n\r\n  function handleEdit(id) {\r\n    if (edit === false) {\r\n      setAppointmentId(id);\r\n      setEdit(true);\r\n    }\r\n  }\r\n\r\n  // insert diagnosis\r\n  function handleDiagnosis(id) {\r\n    setDiagnosisId(id);\r\n    setDiagnosis(true);\r\n  }\r\n\r\n  // insert date scheduled\r\n  function handleDateScheduled(id) {\r\n    setDateScheduledId(id);\r\n    setDateScheduled(true);\r\n  }\r\n\r\n  // denpending on the role it will determine on the view to render.\r\n  if (!user.accesstoken) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else if (add === true) {\r\n    return <Redirect to=\"/add\" />;\r\n  } else if (edit === true) {\r\n    return <Redirect to={\"/edit/\" + appointmentId} />;\r\n  } else if (docRegister === true) {\r\n    return <Redirect to=\"/doctor/register\" />;\r\n  } else if (diagnosis === true) {\r\n    return <Redirect to={\"/diagnosis/\" + diagnosisId} />;\r\n  } else if (dateScheduled === true) {\r\n    return <Redirect to={\"/dateScheduled/\" + DateScheduledId} />;\r\n  } else if (user.role === \"admin\") {\r\n    return (\r\n      <div>\r\n        <h3 className='text-center marginAllaround' >Appointments</h3>\r\n        <Button className=\"top-button \" onClick={() => {handleRole()}}>Create Doctor</Button>\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Doctor</th>\r\n              <th>Symptoms</th>\r\n              <th>Description</th>\r\n              <th>Diagnosis</th>\r\n              <th>Date created</th>\r\n              <th>Date Scheduled</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {appointments.map((currentAppointments) => {\r\n              console.log(currentAppointments._id);\r\n              return (\r\n                <tr>\r\n                  <td>{currentAppointments.doctor}</td>\r\n                  <td>{currentAppointments.symptoms}</td>\r\n                  <td>{currentAppointments.description}</td>\r\n                  <td>{currentAppointments.diagnosis}</td>\r\n                  <td>\r\n                    {currentAppointments.dateCreated.substring(0, 10) +\r\n                      \" \" +\r\n                      currentAppointments.dateCreated.substring(11, 16)}\r\n                  </td>\r\n                  <td>\r\n                    {currentAppointments.dateScheduled\r\n                      ? currentAppointments.dateScheduled\r\n                      : \"waiting for doctors response\"}\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => {\r\n                        handleEdit(currentAppointments._id);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"success\"\r\n                      onClick={() => {\r\n                        handleDateScheduled(currentAppointments._id);\r\n                      }}\r\n                    >\r\n                      Date Schedule\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => {\r\n                        deleteAppointment(currentAppointments._id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else if (user.role === \"doctor\") {\r\n    return (\r\n      <div>\r\n        <h3 className=\"text-center marginAllaround\" >Appointments</h3>\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Doctor</th>\r\n              <th>Symptoms</th>\r\n              <th>Description</th>\r\n              <th>Diagnosis</th>\r\n              <th>Date created</th>\r\n              <th>Date Scheduled</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {appointments.map((currentAppointments) => {\r\n              console.log(currentAppointments);\r\n              return (\r\n                <tr>\r\n                  <td>{currentAppointments.doctor}</td>\r\n                  <td>{currentAppointments.symptoms}</td>\r\n                  <td>{currentAppointments.description}</td>\r\n                  <td>{currentAppointments.diagnosis}</td>\r\n                  <td>\r\n                    {currentAppointments.dateCreated.substring(0, 10) +\r\n                      \" \" +\r\n                      currentAppointments.dateCreated.substring(11, 16)}\r\n                  </td>\r\n                  <td>\r\n                    {currentAppointments.dateScheduled\r\n                      ? currentAppointments.dateScheduled\r\n                      : \"waiting for your response\"}\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => {\r\n                        console.log(currentAppointments._id);\r\n                        handleDiagnosis(currentAppointments._id);\r\n                      }}\r\n                    >\r\n                      Diagnosis\r\n                    </Button>{\" \"}\r\n                    |{\" \"}\r\n                    <Button\r\n                      variant=\"success\"\r\n                      onClick={() => {\r\n                        handleDateScheduled(currentAppointments._id);\r\n                      }}\r\n                    >\r\n                      Date Schedule\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h3 className='text-center marginAllaround' >Appointments</h3>\r\n        <Button className='top-button' onClick={() => {handleRole()}}>Create Appointment</Button>\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Doctor</th>\r\n              <th>Symptoms</th>\r\n              <th>Description</th>\r\n              <th>Diagnosis</th>\r\n              <th>Date created</th>\r\n              <th>Date Scheduled</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {appointments.map((currentAppointments) => {\r\n              console.log(currentAppointments);\r\n              return (\r\n                <tr>\r\n                  <td>{currentAppointments.doctor}</td>\r\n                  <td>{currentAppointments.symptoms}</td>\r\n                  <td>{currentAppointments.description}</td>\r\n                  <td>{currentAppointments.diagnosis}</td>\r\n                  <td>\r\n                    {currentAppointments.dateCreated.substring(0, 10) +\r\n                      \" \" +\r\n                      currentAppointments.dateCreated.substring(11, 16)}\r\n                  </td>\r\n                  <td>\r\n                    {currentAppointments.dateScheduled\r\n                      ? currentAppointments.dateScheduled\r\n                      : \"waiting for doctors response\"}\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => {\r\n                        handleEdit(currentAppointments._id);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Button>{\" \"}\r\n                    |{\" \"}\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => {\r\n                        deleteAppointment(currentAppointments._id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"../App.css\";\r\nimport React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { UserContext } from \"../App\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\n// Helps the user naviagte through the webpages.\r\nfunction NavBar({ logout }) {\r\n  const [user] = useContext(UserContext);\r\n\r\n    // checks for what nav to render\r\n  if (!user.accesstoken) {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Image src=\"hosLogo.png\" className='navImage' rounded />\r\n        <Nav>\r\n          <Link className=\"links m-2\" to=\"/login\">\r\n            Login\r\n          </Link>\r\n          <Link className=\"links m-2\" to=\"/\">\r\n            Appointments\r\n          </Link>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  } else {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Image src=\"hosLogo.png\" className='navImage' rounded />\r\n        <Nav>\r\n          <Link className=\"links m-2\" to=\"/\">\r\n            Appointments\r\n          </Link>\r\n        </Nav>\r\n        <Button className=\"logout-button\" variant=\"danger\" onClick={() => {logout()}}>\r\n          Logout\r\n        </Button>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport { NavBar };\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\nimport axios from \"axios\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\n// component that create a appointment in the database.\r\nexport default function AppointmentCreate() {\r\n  const [user] = useContext(UserContext);\r\n  const [doctorList, setDoctorList] = useState([]);\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const [symptoms, setSymptoms] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    if (name === \"symptoms\") {\r\n      setSymptoms(value);\r\n    } else if (name === \"description\") {\r\n      setDescription(value);\r\n    }\r\n  };\r\n\r\n  // at mount will sett all the doctor names in list.\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8080/api/doctors\").then((doctors) => {\r\n      setDoctorList(doctors.data);\r\n      setDoctor(doctors.data[0].name + \" \" + doctors.data[0].surname);\r\n    });\r\n  }, []);\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const appointment = {\r\n      doctor,\r\n      symptoms,\r\n      description,\r\n    };\r\n\r\n    console.log(appointment);\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/api/add\", appointment, {\r\n        headers: {\r\n          Authorization: `Bearer ${user.accesstoken}`,\r\n        },\r\n      })\r\n      .then((res) => setMessage(res.data.message));\r\n\r\n    setSymptoms(\"\");\r\n    setDescription(\"\");\r\n  }\r\n\r\n  function handleDoctor(e) {\r\n    console.log(doctor);\r\n    console.log(e.target.value);\r\n    setDoctor(e.target.value);\r\n  }\r\n\r\n  // check for a route to render\r\n  console.log(doctor);\r\n  if (!user.accesstoken) {\r\n    return <Redirect to=\"/login\" />;\r\n  } if (message === 'Appointment added') {\r\n    return (\r\n      <div>\r\n        <Alert variant=\"success mobile-alert\">{message}</Alert>\r\n        <Card className=\"bg-light widthAppointmentCard\">\r\n          <h3>Create appointment</h3>\r\n          <form onSubmit={onSubmit} className='m-2'>\r\n            <div className=\"form-group\">\r\n              <label>Dr:</label>\r\n              <select className=\"form-control\" onChange={handleDoctor}>\r\n                {doctorList.map((doctor) => {\r\n                  return (\r\n                    <option\r\n                      key={doctor._id}\r\n                      value={doctor.name + \" \" + doctor.surname}\r\n                    >\r\n                      {doctor.name + \" \" + doctor.surname}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Symptoms: </label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"symptoms\"\r\n                className=\"form-control\"\r\n                value={symptoms}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description: </label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"description\"\r\n                className=\"form-control\"\r\n                value={description}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n            <br />\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Add appointment\"\r\n                className=\"btn btn-primary marginAppointmentButton\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }else {\r\n    return (\r\n      <div>\r\n        <h4>{message}</h4>\r\n        <Card className=\"bg-light widthAppointmentCard\">\r\n          <h3>Create appointment</h3>\r\n          <form onSubmit={onSubmit} className='m-2'>\r\n            <div className=\"form-group\">\r\n              <label>Dr:</label>\r\n              <select className=\"form-control\" onChange={handleDoctor}>\r\n                {doctorList.map((doctor) => {\r\n                  return (\r\n                    <option\r\n                      key={doctor._id}\r\n                      value={doctor.name + \" \" + doctor.surname}\r\n                    >\r\n                      {doctor.name + \" \" + doctor.surname}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Symptoms: </label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"symptoms\"\r\n                className=\"form-control\"\r\n                value={symptoms}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description: </label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"description\"\r\n                className=\"form-control\"\r\n                value={description}\r\n                onChange={onChange}\r\n                required\r\n              />\r\n            </div>\r\n            <br />\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Add appointment\"\r\n                className=\"btn btn-primary marginAppointmentButton\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\nimport axios from \"axios\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n// component that create a car in the database.\r\nexport default function AppointmentEdit(props) {\r\n  const [user] = useContext(UserContext);\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const [doctorList, setDoctorList] = useState([]);\r\n  const [symptoms, setSymptoms] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [edit, setEdited] = useState(false);\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    if (name === \"doctor\") {\r\n      setDoctor(value);\r\n    } else if (name === \"symptoms\") {\r\n      setSymptoms(value);\r\n    } else if (name === \"description\") {\r\n      setDescription(value);\r\n    }\r\n  };\r\n\r\n  // fetchs and sets all of the states to current values.\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/api/get/\" + props.match.params.id)\r\n      .then((res) => {\r\n        console.log(res.data.doctor);\r\n        setDoctor(res.data.doctor);\r\n        setSymptoms(res.data.symptoms);\r\n        setDescription(res.data.description);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios.get(\"http://localhost:8080/api/doctors\").then((doctors) => {\r\n      console.log(doctorList);\r\n      setDoctorList(doctors.data);\r\n    });\r\n  }, []);\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const appointment = {\r\n      doctor,\r\n      symptoms,\r\n      description,\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:8080/api/update/\" + props.match.params.id,\r\n        appointment\r\n      )\r\n      .then(() => setEdited(true));\r\n  }\r\n\r\n  function handleDoctor(e) {\r\n    setDoctor(e.target.value);\r\n  }\r\n  // checks for that route to render\r\n  if (!user.accesstoken) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else if (edit === true) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Card className=\"bg-light widthAppointmentCard\">\r\n          <h3>Edit appointment</h3>\r\n          <form className='m-2' onSubmit={onSubmit}>\r\n            <div>\r\n              <label>Doctor: </label>\r\n              <select  className=\"form-control\" onChange={handleDoctor}>\r\n                {doctorList.map((doc) => {\r\n                  console.log(doc);\r\n                  const docMatch = doc.name + \" \" + doc.surname;\r\n                  if (docMatch === doctor) {\r\n                    return (\r\n                      <option\r\n                        selected\r\n                        key={doc._id}\r\n                        value={doc.name + \" \" + doc.surname}\r\n                      >\r\n                        {doc.name + \" \" + doc.surname}\r\n                      </option>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <option\r\n                        key={doc._id}\r\n                        value={doc.name + \" \" + doc.surname}\r\n                      >\r\n                        {doc.name + \" \" + doc.surname}\r\n                      </option>\r\n                    );\r\n                  }\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div >\r\n              <label>Symptoms: </label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"symptoms\"\r\n                className=\"form-control\"\r\n                value={symptoms}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div >\r\n              <label>Description: </label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"description\"\r\n                className=\"form-control\"\r\n                value={description}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Update appointment\"\r\n                className=\"btn btn-primary updateAppointmentButton\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"../App.css\";\r\nimport axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n// Take the email and password of the user and send it to the back end to be check if it mathes documents in the database.\r\nfunction Login() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // on submit will login the person. if they exist and if the credentians are correct.\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const login = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    axios.post(\"http://localhost:8080/api/login\", login).then((res) => {\r\n      console.log(res.data);\r\n      if (res.data.accesstoken) {\r\n        setUser({\r\n          accesstoken: res.data.accesstoken,\r\n          role: res.data.role,\r\n        });\r\n      } else {\r\n        setMessage(res.data.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const hanldeChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  console.log(user);\r\n    // checks for what page to render\r\n  if (user.accesstoken) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Card className=\"card bg-light loginCard\" >\r\n          <form onSubmit={onSubmit}>\r\n            <h2 className=\"text-center\">Login</h2>\r\n            <h5 className=\"text-center\">{message}</h5>\r\n            <div className=\"input-center\">\r\n              <InputGroup className=\"mb-2 ms-2 loginInputGroup\" >\r\n                <FormControl\r\n                  value={email}\r\n                  onChange={hanldeChange}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  required\r\n                  placeholder=\"email\"\r\n                />\r\n              </InputGroup>\r\n              <InputGroup className=\"mb-2 ms-2 loginInputGroup\" >\r\n                <FormControl\r\n                  value={password}\r\n                  onChange={hanldeChange}\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  required\r\n                  placeholder=\"password\"\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n            <Button className=\"mb-2 login-button\" type=\"submit\">\r\n              Login\r\n            </Button>\r\n            <Link className=\"float-right\" to=\"/register\">\r\n              Register page\r\n            </Link>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n// if user does not have a login they can navigate to the register and create a login for themselfs.\r\nfunction Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurename] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // registers the person on submit\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const register = {\r\n      email,\r\n      password,\r\n      name,\r\n      surname,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/api/patient/register\", register)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.message) {\r\n          setMessage(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.email);\r\n      });\r\n  };\r\n\r\n  const hanldeChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    } else if (name === \"name\") {\r\n      setName(value);\r\n    } else {\r\n      setSurename(value);\r\n    }\r\n  };\r\n    // checks for what page to render\r\n  if (message === \"registerd\") {\r\n    return <Redirect to=\"/login\" />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <form onSubmit={onSubmit}>\r\n        <Card className=\"input-center card bg-light docCard\" >\r\n          <h2 className='h2Reg' >Register:</h2>\r\n\r\n          <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n            <FormControl\r\n              value={email}\r\n              onChange={hanldeChange}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              required\r\n              placeholder=\"Email\"\r\n            />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n            <FormControl\r\n              value={password}\r\n              onChange={hanldeChange}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              required\r\n              placeholder=\"Password\"\r\n            />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n            <FormControl\r\n              value={name}\r\n              onChange={hanldeChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              required\r\n              placeholder=\"Name\"\r\n            />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n            <FormControl\r\n              value={surname}\r\n              onChange={hanldeChange}\r\n              type=\"text\"\r\n              name=\"surname\"\r\n              required\r\n              placeholder=\"Surname\"\r\n            />\r\n          </InputGroup>\r\n          <Button type=\"submit\" className='docSubmitButton' >Register</Button>\r\n          </Card>\r\n        </form>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\n// if user does not have a login they can navigate to the register and create a login for themselfs.\r\nfunction DocRegister() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setsurname] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [user] = useContext(UserContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const register = {\r\n      email,\r\n      password,\r\n      name,\r\n      surname,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/api/doctor/register\", register)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.message) {\r\n          setMessage(res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.email);\r\n      });\r\n  };\r\n\r\n  const hanldeChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    } else if (name === \"name\") {\r\n      setName(value);\r\n    } else {\r\n      setsurname(value);\r\n    }\r\n  };\r\n\r\n    // checks for what page to render\r\n  if (!user.accesstoken) {\r\n    return <Redirect to=\"/login\" />;\r\n  } if (message === 'Registerd') {\r\n    return (\r\n        <div>\r\n        <Alert variant=\"success mobile-alert\">{message}</Alert>\r\n        <form onSubmit={onSubmit}>\r\n          <Card\r\n            className=\"input-center card bg-light docCard\"\r\n          >\r\n            <h2 className='docH2' >Register a Doctor:</h2>\r\n\r\n            <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n              <FormControl\r\n                value={email}\r\n                onChange={hanldeChange}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                required\r\n                placeholder=\"Email\"\r\n              />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n              <FormControl\r\n                value={password}\r\n                onChange={hanldeChange}\r\n                type=\"password\"\r\n                name=\"password\"\r\n                required\r\n                placeholder=\"Password\"\r\n              />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n              <FormControl\r\n                value={name}\r\n                onChange={hanldeChange}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                required\r\n                placeholder=\"Name\"\r\n              />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n              <FormControl\r\n                value={surname}\r\n                onChange={hanldeChange}\r\n                type=\"text\"\r\n                name=\"surname\"\r\n                required\r\n                placeholder=\"Surname\"\r\n              />\r\n            </InputGroup>\r\n            <Button type=\"submit\" className='docSubmitButton'>\r\n              Register\r\n            </Button>\r\n          </Card>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <form onSubmit={onSubmit}>\r\n          <Card\r\n            className=\"input-center card bg-light docCard\"\r\n          >\r\n            <h2 className='docH2' >Register a Doctor:</h2>\r\n            <h5>{message}</h5>\r\n            <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n              <FormControl\r\n                value={email}\r\n                onChange={hanldeChange}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                required\r\n                placeholder=\"Email\"\r\n              />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n              <FormControl\r\n                value={password}\r\n                onChange={hanldeChange}\r\n                type=\"password\"\r\n                name=\"password\"\r\n                required\r\n                placeholder=\"Password\"\r\n              />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n              <FormControl\r\n                value={name}\r\n                onChange={hanldeChange}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                required\r\n                placeholder=\"Name\"\r\n              />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-2 ms-2 docSet50\" >\r\n              <FormControl\r\n                value={surname}\r\n                onChange={hanldeChange}\r\n                type=\"text\"\r\n                name=\"surname\"\r\n                required\r\n                placeholder=\"Surname\"\r\n              />\r\n            </InputGroup>\r\n            <Button type=\"submit\" className='docSubmitButton' >\r\n              Register\r\n            </Button>\r\n          </Card>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocRegister;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { UserContext } from \"../App\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n// insert a diagnosis for the appointment.\r\nexport default function Diagnosis(props) {\r\n  const [user] = useContext(UserContext);\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  function onChange(e) {\r\n    setDiagnosis(e.target.value);\r\n  }\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const insertDiagnosis = {\r\n      diagnosis,\r\n    };\r\n\r\n    console.log(insertDiagnosis);\r\n    // on submit will insert data for the diagnosis\r\n    axios\r\n      .post(\r\n        \"http://localhost:8080/api/diagnosis/\" + props.match.params.id,\r\n        insertDiagnosis,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user.accesstoken}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => setMessage(res.data.message));\r\n  }\r\n\r\n  // checks for what page to render\r\n  if (!user.accesstoken) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  if (message === \"Diagnosis added\") {\r\n    return (\r\n      <>\r\n        <Alert variant=\"success mobile-alert\">{message}</Alert>\r\n        <Card className=\"bg-light setWidth460\">\r\n          <form onSubmit={onSubmit} className='marginAllaround' >\r\n            <label>Diagnosis: </label>\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"Diagnosis\"\r\n              className=\"form-control\"\r\n              value={diagnosis}\r\n              onChange={onChange}\r\n            />\r\n            <Button className='diagnosisSubmitButton' type=\"submit\">Submit</Button>\r\n          </form>\r\n        </Card>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Card className=\"bg-light setWidth460\">\r\n          <form onSubmit={onSubmit} className='marginAllaround' >\r\n            <label>Diagnosis: </label>\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"Diagnosis\"\r\n              className=\"form-control\"\r\n              value={diagnosis}\r\n              onChange={onChange}\r\n            />\r\n            <Button className='diagnosisSubmitButton' type=\"submit\">Submit</Button>\r\n          </form>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import '../App.css'\r\nimport React, { useContext, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { UserContext } from \"../App\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport default function DateScheduled(props) {\r\n  const [user] = useContext(UserContext);\r\n  const [date, setDate] = useState(\"\");\r\n  const [hour, setHour] = useState(\"08:00\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  function handleSelect(e) {\r\n    setHour(e.target.value);\r\n  }\r\n\r\n  function handleInput(e) {\r\n    setDate(e.target.value);\r\n  }\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const dateFormat = {\r\n      dateScheduled: date + \" \" + hour,\r\n    };\r\n\r\n    console.log(dateFormat);\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:8080/api/dateScheduled/\" + props.match.params.id,\r\n        dateFormat,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user.accesstoken}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => setMessage(res.data.message));\r\n  }\r\n  console.log(date, hour);\r\n  // checks for a route to render\r\n  // shows the alert if needed\r\n  if (!user.accesstoken) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  if (message === \"Date scheduled added\") {\r\n    const timeElapsed = Date.now();\r\n    const today = new Date(timeElapsed);\r\n    const dateFormated = today.toISOString();\r\n    return (\r\n      <>\r\n        <Alert variant=\"success mobile-alert widthAlert\" >{message}</Alert>\r\n        <form onSubmit={onSubmit}>\r\n          <Card className='input-center bg-light widthAppointmentCard' >\r\n            <h4 className='right70margin' >Diagnosis: </h4>\r\n            <input\r\n              type=\"date\"\r\n              name=\"yyyy-mm-dd\"\r\n              className=\"form-control m-1 dateWidth\"\r\n              value={date}\r\n              onChange={handleInput}\r\n              min={dateFormated.substring(0, 10)}\r\n            />\r\n            <select onChange={handleSelect} className=\"form-control dateWidth\">\r\n              <option value=\"08:00\">08:00</option>\r\n              <option value=\"09:00\">09:00</option>\r\n              <option value=\"10:00\">10:00</option>\r\n              <option value=\"11:00\">11:00</option>\r\n              <option value=\"12:00\">12:00</option>\r\n              <option value=\"13:00\">13:00</option>\r\n              <option value=\"14:00\">14:00</option>\r\n              <option value=\"15:00\">15:00</option>\r\n              <option value=\"16:00\">16:00</option>\r\n              <option value=\"17:00\">17:00</option>\r\n            </select>\r\n            <Button className='dateScheduledSubmitButton' type=\"submit\">Submit</Button>\r\n          </Card>\r\n        </form>\r\n      </>\r\n    );\r\n  } else {\r\n    const timeElapsed = Date.now();\r\n    const today = new Date(timeElapsed);\r\n    const dateFormated = today.toISOString();\r\n    return (\r\n      <>\r\n        <form onSubmit={onSubmit}>\r\n          <Card className='input-center bg-light widthAppointmentCard' >\r\n            <h4 className='right70margin' >Diagnosis: </h4>\r\n            <input\r\n              type=\"date\"\r\n              name=\"yyyy-mm-dd\"\r\n              className=\"form-control m-1 dateWidth\"\r\n              value={date}\r\n              onChange={handleInput}\r\n              min={dateFormated.substring(0, 10)}\r\n            />\r\n            <select onChange={handleSelect} className=\"form-control dateWidth\">\r\n              <option value=\"08:00\">08:00</option>\r\n              <option value=\"09:00\">09:00</option>\r\n              <option value=\"10:00\">10:00</option>\r\n              <option value=\"11:00\">11:00</option>\r\n              <option value=\"12:00\">12:00</option>\r\n              <option value=\"13:00\">13:00</option>\r\n              <option value=\"14:00\">14:00</option>\r\n              <option value=\"15:00\">15:00</option>\r\n              <option value=\"16:00\">16:00</option>\r\n              <option value=\"17:00\">17:00</option>\r\n            </select>\r\n            <Button className='dateScheduledSubmitButton' type=\"submit\">Submit</Button>\r\n          </Card>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport React, {useState} from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\n//components \nimport AppointmentList from './components/AppointmentList';\nimport { NavBar }  from './components/NavBar';\nimport AppointmentCreate from \"./components/AppointmentCreate\";\nimport AppointmentEdit from \"./components/AppointmentEdit\";\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport DocRegister from './components/DocRegister';\nimport Diagnosis from './components/Diagnosis';\nimport DateScheduled from './components/DateScheduled';\n\n\nexport const UserContext = React.createContext([]);\n\nfunction App() {\n  const [user, setUser] = useState({});\n\n  function Logout() {\n    window.location = '/';\n  }\n  console.log(user);\n\n  // renders the router with all routes it can to.\n  return ( \n    <UserContext.Provider value={[user, setUser]} >\n      <div>\n        <Router>\n          <NavBar logout={Logout} />\n          <Route path=\"/\" exact component={AppointmentList} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/register\" exact component={Register} />\n          <Route path=\"/doctor/register\" exact component={DocRegister} />\n          <Route path=\"/edit/:id\" exact component={AppointmentEdit} />\n          <Route path=\"/add\" exact component={AppointmentCreate} />\n          <Route path=\"/diagnosis/:id\" exact component={Diagnosis} />\n          <Route path=\"/dateScheduled/:id\" exact component={DateScheduled} />\n        </Router>\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}